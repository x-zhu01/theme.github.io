I"Ž)<h2 id="prerequisites">Prerequisites</h2>

<p>Follow the instructions in the <a href="https://jekyllrb.com/docs/installation/">Jekyll Docs</a> to complete the installation of the basic environment. <a href="https://git-scm.com/">Git</a> also needs to be installed.</p>

<h2 id="installation">Installation</h2>

<h3 id="creating-a-new-site">Creating a New Site</h3>

<p>There are two ways to create a new repository for this theme:</p>

<ul>
  <li><a href="#option-1-using-the-chirpy-starter"><strong>Using the Chirpy Starter</strong></a> - Easy to upgrade, isolates irrelevant project files so you can focus on writing.</li>
  <li><a href="#option-2-github-fork"><strong>GitHub Fork</strong></a> - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.</li>
</ul>

<h4 id="option-1-using-the-chirpy-starter">Option 1. Using the Chirpy Starter</h4>

<p>Sign in to GitHub and browse to <a href="https://github.com/cotes2020/chirpy-starter"><strong>Chirpy Starter</strong></a>, click the button <kbd>Use this template</kbd> &gt; <kbd>Create a new repository</kbd>, and name the new repository <code class="language-plaintext highlighter-rouge">USERNAME.github.io</code>, where <code class="language-plaintext highlighter-rouge">USERNAME</code> represents your GitHub username.</p>

<h4 id="option-2-github-fork">Option 2. GitHub Fork</h4>

<p>Sign in to GitHub to <a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork">fork <strong>Chirpy</strong></a>, and then rename it to <code class="language-plaintext highlighter-rouge">USERNAME.github.io</code> (<code class="language-plaintext highlighter-rouge">USERNAME</code> means your username).</p>

<p>Next, clone your site to local machine. In order to build JavaScript files later, we need to install <a href="https://nodejs.org/">Node.js</a>, and then run the tool:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bash tools/init
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote class="prompt-info">
  <p>If you donâ€™t want to deploy your site on GitHub Pages, append option <code class="language-plaintext highlighter-rouge">--no-gh</code> at the end of the above command.</p>
</blockquote>

<p>The above command will:</p>

<ol>
  <li>Check out the code to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/tags">latest tag</a> (to ensure the stability of your site: as the code for the default branch is under development).</li>
  <li>Remove non-essential sample files and take care of GitHub-related files.</li>
  <li>Build JavaScript files and export to <code class="language-plaintext filepath highlighter-rouge">assets/js/dist/</code>, then make them tracked by Git.</li>
  <li>Automatically create a new commit to save the changes above.</li>
</ol>

<h3 id="installing-dependencies">Installing Dependencies</h3>

<p>Before running local server for the first time, go to the root directory of your site and run:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="usage">Usage</h2>

<h3 id="configuration">Configuration</h3>

<p>Update the variables of <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> as needed. Some of them are typical options:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">url</code></li>
  <li><code class="language-plaintext highlighter-rouge">avatar</code></li>
  <li><code class="language-plaintext highlighter-rouge">timezone</code></li>
  <li><code class="language-plaintext highlighter-rouge">lang</code></li>
</ul>

<h3 id="social-contact-options">Social Contact Options</h3>

<p>Social contact options are displayed at the bottom of the sidebar. You can turn on/off the specified contacts in file <code class="language-plaintext filepath highlighter-rouge">_data/contact.yml</code>.</p>

<h3 id="customizing-stylesheet">Customizing Stylesheet</h3>

<p>If you need to customize the stylesheet, copy the themeâ€™s <code class="language-plaintext filepath highlighter-rouge">assets/css/jekyll-theme-chirpy.scss</code> to the same path on your Jekyll site, and then add the custom style at the end of it.</p>

<p>Starting with version <code class="language-plaintext highlighter-rouge">6.2.0</code>, if you want to overwrite the SASS variables defined in <code class="language-plaintext filepath highlighter-rouge">_sass/addon/variables.scss</code>, copy the main sass file <code class="language-plaintext filepath highlighter-rouge">_sass/main.scss</code> into the <code class="language-plaintext filepath highlighter-rouge">_sass</code> directory in your siteâ€™s source, then create a new file <code class="language-plaintext filepath highlighter-rouge">_sass/variables-hook.scss</code> and assign new value.</p>

<h3 id="customing-static-assets">Customing Static Assets</h3>

<p>Static assets configuration was introduced in version <code class="language-plaintext highlighter-rouge">5.1.0</code>. The CDN of the static assets is defined by file <code class="language-plaintext filepath highlighter-rouge">_data/origin/cors.yml</code>, and you can replace some of them according to the network conditions in the region where your website is published.</p>

<p>Also, if youâ€™d like to self-host the static assets, please refer to the <a href="https://github.com/cotes2020/chirpy-static-assets#readme"><em>chirpy-static-assets</em></a>.</p>

<h3 id="running-local-server">Running Local Server</h3>

<p>You may want to preview the site contents before publishing, so just run it by:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle <span class="nb">exec </span>jekyll s
</pre></td></tr></tbody></table></code></pre></div></div>

<p>After a few seconds, the local service will be published at <em><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a></em>.</p>

<h2 id="deployment">Deployment</h2>

<p>Before the deployment begins, check out the file <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> and make sure the <code class="language-plaintext highlighter-rouge">url</code> is configured correctly. Furthermore, if you prefer the <a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites"><strong>project site</strong></a> and donâ€™t use a custom domain, or you want to visit your website with a base URL on a web server other than <strong>GitHub Pages</strong>, remember to change the <code class="language-plaintext highlighter-rouge">baseurl</code> to your project name that starts with a slash, e.g, <code class="language-plaintext highlighter-rouge">/project-name</code>.</p>

<p>Now you can choose <em>ONE</em> of the following methods to deploy your Jekyll site.</p>

<h3 id="deploy-by-using-github-actions">Deploy by Using GitHub Actions</h3>

<p>There are a few things to get ready for.</p>

<ul>
  <li>If youâ€™re on the GitHub Free plan, keep your site repository public.</li>
  <li>
    <p>If you have committed <code class="language-plaintext filepath highlighter-rouge">Gemfile.lock</code> to the repository, and your local machine is not running Linux, go the the root of your site and update the platform list of the lock-file:</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle lock <span class="nt">--add-platform</span> x86_64-linux
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<p>Next, configure the <em>Pages</em> service.</p>

<ol>
  <li>
    <p>Browse to your repository on GitHub. Select the tab <em>Settings</em>, then click <em>Pages</em> in the left navigation bar. Then, in the <strong>Source</strong> section (under <em>Build and deployment</em>), select <a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-with-a-custom-github-actions-workflow"><strong>GitHub Actions</strong></a> from the dropdown menu.<br />
<img src="pages-source-light.png" alt="Build source" class="light border normal" w="375" h="140" />
<img src="pages-source-dark.png" alt="Build source" class="dark normal" w="375" h="140" /></p>
  </li>
  <li>
    <p>Push any commits to GitHub to trigger the <em>Actions</em> workflow. In the <em>Actions</em> tab of your repository, you should see the workflow <em>Build and Deploy</em> running. Once the build is complete and successful, the site will be deployed automatically.</p>
  </li>
</ol>

<p>At this point, you can go to the URL indicated by GitHub to access your site.</p>

<h3 id="manually-build-and-deploy">Manually Build and Deploy</h3>

<p>On self-hosted servers, you cannot enjoy the convenience of <strong>GitHub Actions</strong>. Therefore, you should build the site on your local machine and then upload the site files to the server.</p>

<p>Go to the root of the source project, and build your site as follows:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span><span class="nv">JEKYLL_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>jekyll b
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Unless you specified the output path, the generated site files will be placed in folder <code class="language-plaintext filepath highlighter-rouge">_site</code> of the projectâ€™s root directory. Now you should upload those files to the target server.</p>

:ET